#nginx stop
#sudo nginx -s stop

#user  nobody;
user root owner;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;


    #- vue and express start -

    upstream webclient{
        server localhost:8080;
    }

    upstream expressserver{
        server localhost:3000;
    }

    server {
        listen       6123;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location /expressserver/{
            proxy_pass http://expressserver/;
        }

        location / {

            # add_header Access-Control-Allow-Origin *;
            # add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            # add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

            # if ($request_method = 'OPTIONS') {
            #     return 204;
            # }

            root   html;
            index  index.html index.htm;
            proxy_pass http://webclient/;
        }

    }

    #- vue and express end -


    #gzip  on;

    # server {
    #     listen       5198;
    #     server_name  localhost;

    #     #charset koi8-r;

    #     #access_log  logs/host.access.log  main;

    #     location / {
    #         root   /Users/zhangwenxin/ck_workspace/demo/NginxTest;
    #         index  index.html index.htm;
    #     }
    # }

    # gzip config
    # gzip on;
    # gzip_min_length 1k;
    # gzip_comp_level 9;
    # gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    # gzip_vary on;
    # gzip_disable "MSIE [1-6]\.";

    # server {
	# 	listen       80;
	# 	server_name  localhost:8080;

	# 	#后台服务配置，配置了这个location便可以通过http://域名/jeecg-boot/xxxx 访问		
	# 	location ^~ /jeecg-boot {
	# 		proxy_pass              http://127.0.0.1:8080/jeecg-boot/;
	# 		proxy_set_header        Host 127.0.0.1;
	# 		proxy_set_header        X-Real-IP $remote_addr;
	# 		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
	# 	}
	# 	#解决Router(mode: 'history')模式下，刷新路由地址不能找到页面的问题
	# 	location / {
	# 		root   html;
	# 		index  index.html index.htm;
	# 		if (!-e $request_filename) {
	# 			rewrite ^(.*)$ /index.html?s=$1 last;
	# 			break;
	# 		}
	# 	}
	# }

    #     #error_page  404              /404.html;

    #     # redirect server error pages to the static page /50x.html
    #     #
    #     error_page   500 502 503 504  /50x.html;
    #     location = /50x.html {
    #         root   html;
    #     }

    #     # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #     #
    #     #location ~ \.php$ {
    #     #    proxy_pass   http://127.0.0.1;
    #     #}

    #     # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #     #
    #     #location ~ \.php$ {
    #     #    root           html;
    #     #    fastcgi_pass   127.0.0.1:9000;
    #     #    fastcgi_index  index.php;
    #     #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #     #    include        fastcgi_params;
    #     #}

    #     # deny access to .htaccess files, if Apache's document root
    #     # concurs with nginx's one
    #     #
    #     #location ~ /\.ht {
    #     #    deny  all;
    #     #}
    # }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*;
}
